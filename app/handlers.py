from aiogram import F, Router
from aiogram.types import Message, ReplyKeyboardRemove, FSInputFile
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest


import asyncio

import app.keyboards as kb
from app.yt_mp3 import download_mp3_from_youtube, remove_file
from app.variables import USERS

class Input(StatesGroup):
    url = State()

class DeleteMsg(StatesGroup):
    delete = State()

class Await(StatesGroup):
    await_audio = State()

router = Router()


# ---- —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è ----
async def safe_delete_message(bot, chat_id: int, message_id: int):
    try:
        await bot.delete_message(chat_id=chat_id, message_id=message_id)

    except TelegramBadRequest as e:
        if "message can't be deleted" in str(e):
            await bot.send_message(
                chat_id=chat_id,
                text="‚ö† –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–¥–∞–π –∏—Ö, —Ç–∞–∫ –±—É–¥–µ—Ç –≥–æ—Ä–∞–∑–¥–æ —É–¥–æ–±–Ω–µ–µ."
            )
    except TelegramForbiddenError:
        pass





@router.message(F.text & ~(F.text.startswith('/start') | F.text.startswith('/src')), DeleteMsg.delete)
async def handler_delete_state(message: Message, state: FSMContext):
    data = await state.get_data()
    if "delete" in data:
        await safe_delete_message(message.bot, data["delete"][0], data["delete"][1])
    await safe_delete_message(message.bot, message.chat.id, message.message_id)


@router.message(Await.await_audio)
async def handler_await_audio(message: Message):
    await safe_delete_message(message.bot, message.chat.id, message.message_id)


@router.message(Command("start"))
async def handler_start(message: Message, state: FSMContext):
    if str(message.from_user.id) not in USERS: return
    await safe_delete_message(message.bot, message.chat.id, message.message_id)

    await state.set_state(DeleteMsg.delete)
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–ª—ë—Ç —Ç–µ–±–µ üéµ MP3 —Å YouTube!\n\n"
        "üìå –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
        "1Ô∏è‚É£ –í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /src\n"
        "2Ô∏è‚É£ –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç\n\n"
        "‚ö† –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: —Ä–∞–∑–º–µ—Ä –∞—É–¥–∏–æ ‚â§ 40–º–±, –≤–∏–¥–µ–æ ‚â§ 20 –º–∏–Ω—É—Ç, –ø–ª–µ–π–ª–∏—Å—Ç ‚â§ 20 –≤–∏–¥–µ–æ –∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –Ω–∞–∑–≤–∞–Ω–∏–π.\n\n"
        "‚ö† –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—à—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É ‚Äî –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–¥–∞–π –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –∏–Ω–∞—á–µ —è –Ω–µ —Å–º–æ–≥—É —É–±–∏—Ä–∞—Ç—å –ª–∏—à–Ω–µ–µ.\n\n"
        "üìå –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—É—á—à–µ –Ω–µ —É–¥–∞–ª—è—Ç—å ‚Äî –∫ –Ω–µ–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ /src.",
        reply_markup=kb.src
    )


@router.message(Command("src"), DeleteMsg.delete)
async def handler_src(message: Message, state: FSMContext):
    await safe_delete_message(message.bot, message.chat.id, message.message_id)

    msg = await message.bot.send_message(chat_id=message.chat.id, text="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É")
    await state.update_data(url=[msg.chat.id, msg.message_id])
    await state.set_state(Input.url)


@router.message(Input.url)
async def handler_url(message: Message, state: FSMContext):
    await state.set_state(Await.await_audio)
    data = await state.get_data()

    await safe_delete_message(message.bot, data["url"][0], data["url"][1])
    msg_await = await message.bot.send_message(chat_id=message.chat.id, text="–æ–∂–∏–¥–∞–π—Ç–µ...\n–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ—Ç 1 –¥–æ 10 –º–∏–Ω. –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∏–¥–µ–æ")

    downloaded_files = download_mp3_from_youtube(message.text)

    if downloaded_files:
        for file_path in downloaded_files:
            audio = FSInputFile(file_path)
            try:
                await asyncio.sleep(3)
                await message.bot.send_audio(chat_id=message.chat.id, audio=audio)
            except Exception as e:
                print(e)
                await asyncio.sleep(5)
                continue
    else:
        await state.set_state(DeleteMsg.delete)
        msg_failed = await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å\n–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ (5—Å)")
        await safe_delete_message(message.bot, message.chat.id, message.message_id)
        await safe_delete_message(message.bot, msg_await.chat.id, msg_await.message_id)
        await asyncio.sleep(5)
        await safe_delete_message(message.bot, msg_failed.chat.id, msg_failed.message_id)
        return

    await state.set_state(DeleteMsg.delete)
    await safe_delete_message(message.bot, message.chat.id, message.message_id)
    await safe_delete_message(message.bot, msg_await.chat.id, msg_await.message_id)


    if downloaded_files:
        remove_file(downloaded_files)
